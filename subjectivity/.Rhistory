knitr::opts_chunk$set(echo = TRUE)
library(stringr)
library(dplyr)
library(readr)
library(reshape2)
library(data.table)
library(gmodels)
library(wordVectors)
library(ggpubr)
library(corrplot)
library(ggpubr)
library(gridExtra)
library(grid)
# get news of a theme
news_of_theme <- function(data, theme, secao, get_from_theme = T){
true_false_vector <- data %>% select(secao) %>%
unlist() %>% as.vector() %>%
tolower() %>% str_detect(theme)
if(get_from_theme){
news <- data %>% filter(true_false_vector == TRUE)
} else {
news <- data %>% filter(true_false_vector == FALSE)
}
return(news)
}
get_bounds <- function(values){
conf.interval = ci(values)
data.frame(as.list(conf.interval))
}
# get cconfidence interval by year and section
get_conf_by_year_section = function(news, group_var, pattern_filter = NULL){
if(!is.null(pattern_filter)){
news = news %>% news_of_theme(pattern_filter, "text")
}
melted_ratings = melt(news, id=c("text", "source", "section", "day", "month", "year"))
conf_by_year_sec = melted_ratings %>% group_by_(.dots = group_var) %>% do(get_bounds(.$value))
if(!is.null(pattern_filter)){
conf_by_year_sec$entity = pattern_filter
}
return(conf_by_year_sec)
}
get_mean_conf_dif = function(news, group_var, pattern_1, pattern_2){
t_test_run = function(grouped_df){
values_1 = grouped_df %>% filter(entity == pattern_1)
values_2 = grouped_df %>% filter(entity == pattern_2)
t_test = t.test(values_1$value, values_2$value)
data_frame(p.value = t_test$p.value, CI.lower = t_test$conf.int[1], CI.upper = t_test$conf.int[2])
}
if(!is.null(pattern_1)){
news_1 = news %>% news_of_theme(pattern_1, "text")
}
melted_ratings_1 = melt(news_1, id=c("text", "source", "section", "day", "month", "year"))
melted_ratings_1$entity = pattern_1
if(!is.null(pattern_2)){
news_2 = news %>% news_of_theme(pattern_2, "text")
}
melted_ratings_2 = melt(news_2, id=c("text", "source", "section", "day", "month", "year"))
melted_ratings_2$entity = pattern_2
melted_ratings = bind_rows(melted_ratings_1, melted_ratings_2)
conf_by_year_sec = melted_ratings %>% group_by_(.dots = group_var) %>% do(t_test_run(.))
return(conf_by_year_sec)
}
subjectivity_years_section = function(data, section_name){
data %>% filter(section %in% section_name) %>% ggplot(aes(as.factor(year), Estimate, ymin = CI.lower, ymax = CI.upper, color = source)) + geom_errorbar(position = "dodge") + facet_wrap(variable ~ ., scales="free")
}
get_confidence_dif_by_year = function(news, target_year, sec, group_var, entity_1, entity_2, entity_3){
news_year = news %>% filter(year == target_year, section == sec)
CI.dif.ent3.ent1 = news_year %>% get_mean_conf_dif(group_var, entity_3, entity_1) %>% mutate(Dif = paste(entity_3, entity_1, sep = " - "))
CI.dif.ent2.ent1 = news_year %>% get_mean_conf_dif(group_var, entity_2, entity_1) %>% mutate(Dif = paste(entity_2, entity_1, sep = " - "))
CI.dif.ent2.ent3 = news_year %>% get_mean_conf_dif(group_var, entity_2, entity_3) %>% mutate(Dif = paste(entity_2, entity_3, sep = " - "))
CI.dif.year = bind_rows(CI.dif.ent3.ent1, CI.dif.ent2.ent1, CI.dif.ent2.ent3)
}
# confidence interval plot
CI_plot = function(conf_int_data, x, grid_formula, col_discriminant, dashed_line_at = NULL){
conf_int_data$year = as.factor(conf_int_data$year)
form = grid_formula %>% as.formula()
plot = ggplot(conf_int_data, aes(get(x), fill = get(col_discriminant))) +
geom_errorbar(aes(ymin = CI.lower,
ymax = CI.upper,
color = get(col_discriminant)),
width = 1, position = "dodge") +
labs(fill = "", x = "") +
facet_grid(form) +
guides(color=guide_legend(title="")) +
theme_bw()
if(!is.null(dashed_line_at)){
plot = plot + geom_hline(yintercept = dashed_line_at, linetype = "dashed")
}
plot + theme(legend.position="bottom")
}
wiki_data = read_csv("data/wmd/wiki_rates.csv") %>% select(-class, -Comment)
knitr::opts_chunk$set(echo = TRUE)
library(stringr)
library(dplyr)
library(readr)
library(reshape2)
library(data.table)
library(gmodels)
library(wordVectors)
library(ggpubr)
library(corrplot)
library(ggpubr)
library(gridExtra)
library(grid)
# get news of a theme
news_of_theme <- function(data, theme, secao, get_from_theme = T){
true_false_vector <- data %>% select(secao) %>%
unlist() %>% as.vector() %>%
tolower() %>% str_detect(theme)
if(get_from_theme){
news <- data %>% filter(true_false_vector == TRUE)
} else {
news <- data %>% filter(true_false_vector == FALSE)
}
return(news)
}
get_bounds <- function(values){
conf.interval = ci(values)
data.frame(as.list(conf.interval))
}
# get cconfidence interval by year and section
get_conf_by_year_section = function(news, group_var, pattern_filter = NULL){
if(!is.null(pattern_filter)){
news = news %>% news_of_theme(pattern_filter, "text")
}
melted_ratings = melt(news, id=c("text", "source", "section", "day", "month", "year"))
conf_by_year_sec = melted_ratings %>% group_by_(.dots = group_var) %>% do(get_bounds(.$value))
if(!is.null(pattern_filter)){
conf_by_year_sec$entity = pattern_filter
}
return(conf_by_year_sec)
}
get_mean_conf_dif = function(news, group_var, pattern_1, pattern_2){
t_test_run = function(grouped_df){
values_1 = grouped_df %>% filter(entity == pattern_1)
values_2 = grouped_df %>% filter(entity == pattern_2)
t_test = t.test(values_1$value, values_2$value)
data_frame(p.value = t_test$p.value, CI.lower = t_test$conf.int[1], CI.upper = t_test$conf.int[2])
}
if(!is.null(pattern_1)){
news_1 = news %>% news_of_theme(pattern_1, "text")
}
melted_ratings_1 = melt(news_1, id=c("text", "source", "section", "day", "month", "year"))
melted_ratings_1$entity = pattern_1
if(!is.null(pattern_2)){
news_2 = news %>% news_of_theme(pattern_2, "text")
}
melted_ratings_2 = melt(news_2, id=c("text", "source", "section", "day", "month", "year"))
melted_ratings_2$entity = pattern_2
melted_ratings = bind_rows(melted_ratings_1, melted_ratings_2)
conf_by_year_sec = melted_ratings %>% group_by_(.dots = group_var) %>% do(t_test_run(.))
return(conf_by_year_sec)
}
subjectivity_years_section = function(data, section_name){
data %>% filter(section %in% section_name) %>% ggplot(aes(as.factor(year), Estimate, ymin = CI.lower, ymax = CI.upper, color = source)) + geom_errorbar(position = "dodge") + facet_wrap(variable ~ ., scales="free")
}
get_confidence_dif_by_year = function(news, target_year, sec, group_var, entity_1, entity_2, entity_3){
news_year = news %>% filter(year == target_year, section == sec)
CI.dif.ent3.ent1 = news_year %>% get_mean_conf_dif(group_var, entity_3, entity_1) %>% mutate(Dif = paste(entity_3, entity_1, sep = " - "))
CI.dif.ent2.ent1 = news_year %>% get_mean_conf_dif(group_var, entity_2, entity_1) %>% mutate(Dif = paste(entity_2, entity_1, sep = " - "))
CI.dif.ent2.ent3 = news_year %>% get_mean_conf_dif(group_var, entity_2, entity_3) %>% mutate(Dif = paste(entity_2, entity_3, sep = " - "))
CI.dif.year = bind_rows(CI.dif.ent3.ent1, CI.dif.ent2.ent1, CI.dif.ent2.ent3)
}
# confidence interval plot
CI_plot = function(conf_int_data, x, grid_formula, col_discriminant, dashed_line_at = NULL){
conf_int_data$year = as.factor(conf_int_data$year)
form = grid_formula %>% as.formula()
plot = ggplot(conf_int_data, aes(get(x), fill = get(col_discriminant))) +
geom_errorbar(aes(ymin = CI.lower,
ymax = CI.upper,
color = get(col_discriminant)),
width = 1, position = "dodge") +
labs(fill = "", x = "") +
facet_grid(form) +
guides(color=guide_legend(title="")) +
theme_bw()
if(!is.null(dashed_line_at)){
plot = plot + geom_hline(yintercept = dashed_line_at, linetype = "dashed")
}
plot + theme(legend.position="bottom")
}
news = read_csv("news_subjectivity.csv")
group_var = c("variable", "source", "year", "section")
melted_ratings = melt(news, id=c("text", "source", "section", "day", "month", "year"))
group_var = c("variable", "source", "year", "section")
melted_ratings = melt(news, id=c("text", "source", "section", "day", "month", "year"))
sources_distribution_plot = melted_ratings %>% ggplot(aes(source, value)) + geom_boxplot() + facet_wrap(~variable)
sources_distribution_plot
conf_by_source = melted_ratings %>% group_by(variable, source) %>% do(get_bounds(.$value))
View(melted_ratings)
group_var = c("variable", "source", "year", "section")
melted_ratings = melt(news, id=c("text", "source", "section", "day", "month", "year","title"))
View(melted_ratings)
melted_ratings = melt(news, id=c("text", "source", "section", "day", "month", "year","title","url"))
View(melted_ratings)
147480*5
melted_ratings = melt(news, id=c("text", "source", "section", "day", "month", "year","title","url","content"))
sources_distribution_plot = melted_ratings %>% ggplot(aes(source, value)) + geom_boxplot() + facet_wrap(~variable)
sources_distribution_plot
density_distribution_plot = melted_ratings %>% ggplot(aes(value, color = source)) + geom_density() + facet_wrap(~variable)
density_distribution_plot
conf_by_source = melted_ratings %>% group_by(variable, source) %>% do(get_bounds(.$value))
conf_by_year = melted_ratings %>% group_by(variable, source, year) %>% do(get_bounds(.$value))
conf_by_year_sec = melted_ratings %>% group_by(variable, source, year, section) %>% do(get_bounds(.$value))
conf_by_source = conf_by_source %>% bind_rows(conf_wiki)
wiki_data = read_csv("data/wmd/wiki_rates.csv") %>% select(-class, -Comment)
wiki_data = read_csv("data/wmd/wiki_rates.csv") %>% select(-class, -Comment)
conf_wiki = melt(wiki_data) %>% group_by(variable) %>% do(get_bounds(.$value))
conf_wiki$source = "Wikipedia"
conf_by_source = conf_by_source %>% bind_rows(conf_wiki)
subjectivity_by_source = conf_by_source %>% ggplot(aes(source, Estimate, ymin = CI.lower, ymax = CI.upper, color = source)) +
geom_errorbar() +
facet_grid(. ~ variable, scales="free") +
labs(x = "", y = "", color = "Portal") +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
text = element_text(size = 20),
legend.text = element_text(size = 15),
legend.title = element_text(size = 15),
legend.position="right")
subjectivity_by_source
#ggsave("general_subjectivity.pdf", plot = subjectivity_by_source, device = "pdf")
subjectivity_years = conf_by_year %>% ggplot(aes(as.factor(year), Estimate, ymin = CI.lower, ymax = CI.upper, color = source)) + geom_errorbar(position = "dodge") + facet_wrap(variable ~ ., scales="free")  + theme(axis.text.x = element_text(angle = 90, hjust = 1))
subjectivity_years
section_name = c("politics","economy")
formula = "section ~ variable"
plot.dif.sec = conf_by_year_sec %>% ggplot() +
geom_errorbar(aes(as.factor(year), ymin = CI.lower, ymax = CI.upper, color = section), width = 1, position = "dodge") +
labs(fill = "", x = "") +
facet_grid("variable ~ source") +
theme_bw()
plot.dif.sec
marina = news %>%  get_conf_by_year_section(group_var, "marina")
CI.dif.2010 = news %>% get_confidence_dif_by_year(2010, "politics", group_var, "dilma", "serra", "marina")
CI.dif.2010 = news %>% get_confidence_dif_by_year(2010, "politics", group_var, "dilma", "serra", "marina")
CI.dif.2014 = news %>% get_confidence_dif_by_year(2014, "politics", group_var, "dilma", "aecio", "marina")
CI.dif.2018 = news %>% get_confidence_dif_by_year(2018, "politics", group_var, "haddad", "bolsonaro", "ciro")
get_confidence_dif_by_year = function(news, target_year, sec, group_var, entity_1, entity_2, entity_3){
news_year = news %>% filter(year == target_year, section == sec)
CI.dif.ent3.ent1 = news_year %>% get_mean_conf_dif(group_var, entity_3, entity_1) %>% mutate(Dif = paste(entity_3, entity_1, sep = " - "))
print(CI.dif.ent3.ent1)
CI.dif.ent2.ent1 = news_year %>% get_mean_conf_dif(group_var, entity_2, entity_1) %>% mutate(Dif = paste(entity_2, entity_1, sep = " - "))
CI.dif.ent2.ent3 = news_year %>% get_mean_conf_dif(group_var, entity_2, entity_3) %>% mutate(Dif = paste(entity_2, entity_3, sep = " - "))
CI.dif.year = bind_rows(CI.dif.ent3.ent1, CI.dif.ent2.ent1, CI.dif.ent2.ent3)
}
group_var = c("variable", "source", "year", "section","title","url","content")
CI.dif.2010 = news %>% get_confidence_dif_by_year(2010, "politics", group_var, "dilma", "serra", "marina")
group_var = c("variable", "source", "year", "section")
CI.dif.2010 = news %>% get_confidence_dif_by_year(2010, "politics", group_var, "dilma", "serra", "marina")
get_mean_conf_dif = function(news, group_var, pattern_1, pattern_2){
t_test_run = function(grouped_df){
values_1 = grouped_df %>% filter(entity == pattern_1)
values_2 = grouped_df %>% filter(entity == pattern_2)
t_test = t.test(values_1$value, values_2$value)
data_frame(p.value = t_test$p.value, CI.lower = t_test$conf.int[1], CI.upper = t_test$conf.int[2])
}
if(!is.null(pattern_1)){
news_1 = news %>% news_of_theme(pattern_1, "text")
}
melted_ratings_1 = melt(news_1, id=c("text", "source", "section", "day", "month", "year"))
melted_ratings_1$entity = pattern_1
if(!is.null(pattern_2)){
news_2 = news %>% news_of_theme(pattern_2, "text")
}
melted_ratings_2 = melt(news_2, id=c("text", "source", "section", "day", "month", "year"))
melted_ratings_2$entity = pattern_2
melted_ratings = bind_rows(melted_ratings_1, melted_ratings_2)
print(head(melted_ratings))
conf_by_year_sec = melted_ratings %>% group_by_(.dots = group_var) %>% do(t_test_run(.))
return(conf_by_year_sec)
}
get_confidence_dif_by_year = function(news, target_year, sec, group_var, entity_1, entity_2, entity_3){
news_year = news %>% filter(year == target_year, section == sec)
CI.dif.ent3.ent1 = news_year %>% get_mean_conf_dif(group_var, entity_3, entity_1) %>% mutate(Dif = paste(entity_3, entity_1, sep = " - "))
print(CI.dif.ent3.ent1)
CI.dif.ent2.ent1 = news_year %>% get_mean_conf_dif(group_var, entity_2, entity_1) %>% mutate(Dif = paste(entity_2, entity_1, sep = " - "))
CI.dif.ent2.ent3 = news_year %>% get_mean_conf_dif(group_var, entity_2, entity_3) %>% mutate(Dif = paste(entity_2, entity_3, sep = " - "))
CI.dif.year = bind_rows(CI.dif.ent3.ent1, CI.dif.ent2.ent1, CI.dif.ent2.ent3)
}
CI.dif.2010 = news %>% get_confidence_dif_by_year(2010, "politics", group_var, "dilma", "serra", "marina")
get_confidence_dif_by_year = function(news, target_year, sec, group_var, entity_1, entity_2, entity_3){
news_year = news %>% filter(year == target_year, section == sec)
CI.dif.ent3.ent1 = news_year %>% get_mean_conf_dif(group_var, entity_3, entity_1) %>% mutate(Dif = paste(entity_3, entity_1, sep = " - "))
print("aqui")
CI.dif.ent2.ent1 = news_year %>% get_mean_conf_dif(group_var, entity_2, entity_1) %>% mutate(Dif = paste(entity_2, entity_1, sep = " - "))
CI.dif.ent2.ent3 = news_year %>% get_mean_conf_dif(group_var, entity_2, entity_3) %>% mutate(Dif = paste(entity_2, entity_3, sep = " - "))
CI.dif.year = bind_rows(CI.dif.ent3.ent1, CI.dif.ent2.ent1, CI.dif.ent2.ent3)
}
CI.dif.2010 = news %>% get_confidence_dif_by_year(2010, "politics", group_var, "dilma", "serra", "marina")
View(melted_ratings)
t_test_run = function(grouped_df){
print(head(grouped_df))
values_1 = grouped_df %>% filter(entity == pattern_1)
values_2 = grouped_df %>% filter(entity == pattern_2)
t_test = t.test(values_1$value, values_2$value)
data_frame(p.value = t_test$p.value, CI.lower = t_test$conf.int[1], CI.upper = t_test$conf.int[2])
}
get_mean_conf_dif = function(news, group_var, pattern_1, pattern_2){
t_test_run = function(grouped_df){
print(head(grouped_df))
values_1 = grouped_df %>% filter(entity == pattern_1)
values_2 = grouped_df %>% filter(entity == pattern_2)
t_test = t.test(values_1$value, values_2$value)
data_frame(p.value = t_test$p.value, CI.lower = t_test$conf.int[1], CI.upper = t_test$conf.int[2])
}
if(!is.null(pattern_1)){
news_1 = news %>% news_of_theme(pattern_1, "text")
}
melted_ratings_1 = melt(news_1, id=c("text", "source", "section", "day", "month", "year"))
melted_ratings_1$entity = pattern_1
if(!is.null(pattern_2)){
news_2 = news %>% news_of_theme(pattern_2, "text")
}
melted_ratings_2 = melt(news_2, id=c("text", "source", "section", "day", "month", "year"))
melted_ratings_2$entity = pattern_2
melted_ratings = bind_rows(melted_ratings_1, melted_ratings_2)
conf_by_year_sec = melted_ratings %>% group_by_(.dots = group_var) %>% do(t_test_run(.))
return(conf_by_year_sec)
}
CI.dif.2010 = news %>% get_confidence_dif_by_year(2010, "politics", group_var, "dilma", "serra", "marina")
get_mean_conf_dif = function(news, group_var, pattern_1, pattern_2){
t_test_run = function(grouped_df){
values_1 = grouped_df %>% filter(entity == pattern_1)
values_2 = grouped_df %>% filter(entity == pattern_2)
t_test = t.test(values_1$value, values_2$value)
data_frame(p.value = t_test$p.value, CI.lower = t_test$conf.int[1], CI.upper = t_test$conf.int[2])
}
if(!is.null(pattern_1)){
news_1 = news %>% news_of_theme(pattern_1, "text")
}
melted_ratings_1 = melt(news_1, id=c("text", "source", "section", "day", "month", "year"))
melted_ratings_1$entity = pattern_1
print(melted_ratings_1)
if(!is.null(pattern_2)){
news_2 = news %>% news_of_theme(pattern_2, "text")
}
melted_ratings_2 = melt(news_2, id=c("text", "source", "section", "day", "month", "year"))
melted_ratings_2$entity = pattern_2
melted_ratings = bind_rows(melted_ratings_1, melted_ratings_2)
conf_by_year_sec = melted_ratings %>% group_by_(.dots = group_var) %>% do(t_test_run(.))
return(conf_by_year_sec)
}
CI.dif.2010 = news %>% get_confidence_dif_by_year(2010, "politics", group_var, "dilma", "serra", "marina")
get_mean_conf_dif = function(news, group_var, pattern_1, pattern_2){
t_test_run = function(grouped_df){
values_1 = grouped_df %>% filter(entity == pattern_1)
values_2 = grouped_df %>% filter(entity == pattern_2)
t_test = t.test(values_1$value, values_2$value)
data_frame(p.value = t_test$p.value, CI.lower = t_test$conf.int[1], CI.upper = t_test$conf.int[2])
}
if(!is.null(pattern_1)){
news_1 = news %>% news_of_theme(pattern_1, "text")
}
melted_ratings_1 = melt(news_1, id=c("text", "source", "section", "day", "month", "year","title","url","content"))
melted_ratings_1$entity = pattern_1
if(!is.null(pattern_2)){
news_2 = news %>% news_of_theme(pattern_2, "text")
}
melted_ratings_2 = melt(news_2, id=c("text", "source", "section", "day", "month", "year","title","url","content"))
melted_ratings_2$entity = pattern_2
melted_ratings = bind_rows(melted_ratings_1, melted_ratings_2)
conf_by_year_sec = melted_ratings %>% group_by_(.dots = group_var) %>% do(t_test_run(.))
return(conf_by_year_sec)
}
CI.dif.2010 = news %>% get_confidence_dif_by_year(2010, "politics", group_var, "dilma", "serra", "marina")
CI.dif.2014 = news %>% get_confidence_dif_by_year(2014, "politics", group_var, "dilma", "aecio", "marina")
CI.dif.2018 = news %>% get_confidence_dif_by_year(2018, "politics", group_var, "haddad", "bolsonaro", "ciro")
CI.dif = bind_rows(CI.dif.2010, CI.dif.2014, CI.dif.2018)
x = "variable"
grid_formula = "year ~ source"
col_discriminant = "Dif"
conf_int_data = CI.dif
dashed_line_at = 0
p = CI.dif %>% CI_plot(x, grid_formula, col_discriminant, dashed_line_at) +
scale_y_continuous(breaks = c(0), label = c("0.0"))
p
get_mean_conf_dif = function(news, group_var, pattern_1, pattern_2){
t_test_run = function(grouped_df){
values_1 = grouped_df %>% filter(entity == pattern_1)
values_2 = grouped_df %>% filter(entity == pattern_2)
t_test = t.test(values_2$value, values_1$value)
data_frame(p.value = t_test$p.value, CI.lower = t_test$conf.int[1], CI.upper = t_test$conf.int[2])
}
if(!is.null(pattern_1)){
news_1 = news %>% news_of_theme(pattern_1, "text")
}
melted_ratings_1 = melt(news_1, id=c("text", "source", "section", "day", "month", "year","title","url","content"))
melted_ratings_1$entity = pattern_1
if(!is.null(pattern_2)){
news_2 = news %>% news_of_theme(pattern_2, "text")
}
melted_ratings_2 = melt(news_2, id=c("text", "source", "section", "day", "month", "year","title","url","content"))
melted_ratings_2$entity = pattern_2
melted_ratings = bind_rows(melted_ratings_1, melted_ratings_2)
conf_by_year_sec = melted_ratings %>% group_by_(.dots = group_var) %>% do(t_test_run(.))
return(conf_by_year_sec)
}
CI.dif.2010 = news %>% get_confidence_dif_by_year(2010, "politics", group_var, "dilma", "serra", "marina")
CI.dif.2010 = news %>% get_confidence_dif_by_year(2010, "politics", group_var, "dilma", "serra", "marina")
CI.dif.2014 = news %>% get_confidence_dif_by_year(2014, "politics", group_var, "dilma", "aecio", "marina")
CI.dif.2018 = news %>% get_confidence_dif_by_year(2018, "politics", group_var, "haddad", "bolsonaro", "ciro")
CI.dif = bind_rows(CI.dif.2010, CI.dif.2014, CI.dif.2018)
x = "variable"
x = "variable"
grid_formula = "year ~ source"
col_discriminant = "Dif"
conf_int_data = CI.dif
dashed_line_at = 0
p = CI.dif %>% CI_plot(x, grid_formula, col_discriminant, dashed_line_at) +
scale_y_continuous(breaks = c(0), label = c("0.0"))
p = CI.dif %>% CI_plot(x, grid_formula, col_discriminant, dashed_line_at) +
scale_y_continuous(breaks = c(0), label = c("0.0"))
p
CI.dif.pt.psdb = news %>% get_mean_conf_dif(group_var, "psdb", "pt") %>% filter(section == "politics")
CI.dif.pt.psdb = news %>% get_mean_conf_dif(group_var, "psdb", "pt") %>% filter(section == "politics")
plot.dif.pt.psdb <- CI.dif.pt.psdb %>%
ggplot() +
geom_errorbar(aes(as.factor(year), ymin = CI.lower, ymax = CI.upper),
width = 1, position = "dodge") +
geom_hline(yintercept = 0, linetype = "dashed") +
labs(fill = "", x = "") +
facet_grid("variable ~ source") +
scale_y_continuous(breaks = c(0), label = c("0.0")) +
theme_bw() +
theme(text = element_text(size = 20),
axis.text = element_text(size = 15))
plot.dif.pt.psdb
#ggsave("pt_psdb_subjectivity.pdf", plot = plot.dif.pt.psdb, device = "pdf")
CI.dif.pt.psdb = news %>% get_mean_conf_dif_intra(group_var, "psdb", "pt") %>% filter(section == "politics")
