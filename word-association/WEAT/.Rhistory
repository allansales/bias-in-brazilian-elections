vies_entidade <- function(pares){
dif_sim_table = create_cosine_metrics(pares$targets_a, pares$targets_b)
bias_entity = sum(dif_sim_table$dif)
return(data_frame(bias_entity))
}
execute_weat <- function(x, y, targets_a, targets_b){
dif_sim_table = create_cosine_metrics(targets_a, targets_b)
p_test = permutation_test(dif_sim_table, x, y)
p_valor = p_test$p.value
score_x_y = p_test$estatistica
tam_efeito = effect_size(x, y, dif_sim_table)
valores = data_frame(p_valor, tam_efeito)
return(valores = valores)
}
permutation_test <- function(dif_sim_table, x, y){
xi = dif_sim_table %>% filter(target %in% x)
yi = dif_sim_table %>% filter(target %in% y)
permtest = permTS(xi$dif, yi$dif, alternative = "two.sided")
return(list(p.value = permtest$p.value, estatistica = permtest$statistic))
}
## Escolhe palavras para definir um conjunto
get_palavras_proximas <- function(alvo, sim_boundary, word_embedding){
# 200 poderia ser qualquer numero. foi escolhido apenas para garantir que teriamos muitas palavras a ser filtradas
words = closest_to(word_embedding, word_embedding[[alvo]], 200)
colnames(words)[2] = "similarity"
words = words %>% filter(similarity >= sim_boundary)
return(words)
}
wmd_calculation <- function(we, x, y, a, b){
to_dtm <- function(x, y, a, b){
format_vectors = function(vec, doc_label){
vec = vec %>% as_data_frame() %>% rename(term = value)
vec$count = 1
vec$document = doc_label
return(vec)
}
x = format_vectors(x, 1)
y = format_vectors(y, 2)
a = format_vectors(a, 3)
b = format_vectors(b, 4)
dtm = bind_rows(x, y, a, b) %>% cast_sparse(document, term, count)
return(dtm)
}
dtm = to_dtm(x, y, a, b)
targets=dtm[1:2,]
features=dtm[3:4,]
rwmd = RelaxedWordMoversDistance$new(we, normalize = TRUE, progressbar = F)
wmd = rwmd$dist2(targets, features)
return(wmd)
}
get_weat_value <- function(wmd_matrix){
sums = (wmd_matrix[,1] - wmd_matrix[,2])
weat = sums[1] - sums[2]
return(weat)
}
weat_wmd <- function(we, x, y, a, b){
wmd_matrix = wmd_calculation(we, x, y, a, b)
weat = get_weat_value(wmd_matrix)
return(weat)
}
permutation_test_wmd <- function(we, x, y, a, b){
perms = permutacao(x, y)
perms_1 = perms[[1]]
perms_2 = perms[[2]]
n = nrow(perms_1)/2 #poderia pegar qualquer data frame. divide por 2 porque depois da metade dos data frames, os valores comecam a se repetir
weats_perms = vector(length = n)
pb = txtProgressBar(min = 0, max = n, style = 3)
for(i in 1:n){
set_1 = perms_1[i,] %>% as_vector() %>% as.character()
set_2 = perms_2[i,] %>% as_vector() %>% as.character()
value = weat_wmd(we, set_1, set_2, a, b)
weats_perms[i] = value
setTxtProgressBar(pb, i)
}
close(pb)
# adicinar effect size
p.value = sum(weats_perms >= abs(weats_perms[1]))/length(weats_perms)
return(p.value)
}
wmd_calculation_2 <- function(we, x, a, b){
to_dtm = function(x, a, b){
format_vectors = function(vec, doc_label){
vec = vec %>% as_data_frame() %>% rename(term = value)
vec$count = 1
vec$document = doc_label
return(vec)
}
docs_x = data_frame()
n = length(x)
for(i in 1:n){
doc = format_vectors(x[i],i)
docs_x = rbind(docs_x, doc)
}
doc_a = format_vectors(a, nrow(docs_x)+1)
doc_b = format_vectors(b, nrow(docs_x)+2)
dtm = bind_rows(docs_x, doc_a, doc_b) %>% cast_sparse(document, term, count)
return(dtm)
}
dtm = to_dtm(x, a, b)
n = nrow(dtm)
targets=dtm[1:(n-2),]
features=dtm[(n-1):n,]
rwmd = RelaxedWordMoversDistance$new(we, normalize = TRUE, progressbar = F)
wmd = rwmd$dist2(targets, features) %>%
as_data_frame() %>%
mutate(target = x, dif = V1 - V2) %>%
select(target, dif)
return(wmd)
}
we = read.binary.vectors("./../embeddings/FOLHASP-2014-12-30-2014-01-01.bin")
x = c("dilma", "pt", "rousseff", "petista","lula")
y = c("aécio", "psdb", "neves", "tucano")
a = c("bom","ótimo","maravilhoso","excelente","alto","déficit")
b = c("ruim","fraco","péssimo","horrível","baixo","superávit")
weat_wmd_x = wmd_calculation_2(we, x, a, b)
weat_wmd_y = wmd_calculation_2(we, y, a, b)
weat_wmd_y
weat_wmd_x
dif_table = bind_rows(weat_wmd_x, weat_wmd_y)
dif_table
permutation_test(dif_table, x, y)
pares = create_pares(x, a, b, modelo=we)
we = read.binary.vectors("./../embeddings/FOLHASP-2014-12-30-2014-01-01.bin")
x = c("dilma", "pt", "rousseff", "petista","lula")
y = c("aécio", "psdb", "neves", "tucano")
a = c("bom","ótimo","maravilhoso","excelente","alto","déficit")
b = c("ruim","fraco","péssimo","horrível","baixo","superávit")
pares = create_pares(x, a, b, modelo=we)
pares = create_pares(x, y, a, b, modelo=we)
pares
execute_weat(x, y, pares$targets_a, pares$targets_b)
we = read.binary.vectors("./../embeddings/FOLHASP-2014-12-30-2014-01-01.bin")
x = c("dilma", "pt", "rousseff", "petista","lula")
y = c("aécio", "psdb", "neves", "tucano")
a = c("bom","ótimo","maravilhoso","excelente","alto","déficit")
b = c("ruim","fraco","péssimo","horrível","baixo","superávit")
weat_wmd_x = wmd_calculation_2(we, x, a, b)
weat_wmd_y = wmd_calculation_2(we, y, a, b)
dif_table = bind_rows(weat_wmd_x, weat_wmd_y)
permutation_test(dif_table, x, y)
x = c("dilma", "pt", "rousseff", "petista","lula")
y = c("aécio", "psdb", "neves", "tucano")
a = c("bom","ótimo","maravilhoso","excelente","alto","déficit")
b = c("ruim","fraco","péssimo","horrível","baixo","superávit")
weat_wmd_x = wmd_calculation_2(we, x, a, b)
weat_wmd_y = wmd_calculation_2(we, y, a, b)
dif_table = bind_rows(weat_wmd_x, weat_wmd_y)
permutation_test(dif_table, x, y)
x = c("dilma", "pt", "rousseff", "petista")
y = c("aécio", "psdb", "neves", "tucano")
a = c("bom","ótimo","maravilhoso","excelente","alto","déficit")
b = c("ruim","fraco","péssimo","horrível","baixo","superávit")
weat_wmd_x = wmd_calculation_2(we, x, a, b)
weat_wmd_y = wmd_calculation_2(we, y, a, b)
dif_table = bind_rows(weat_wmd_x, weat_wmd_y)
dif_table
permutation_test(dif_table, x, y)
pares = create_pares(x, y, a, b, modelo=we)
execute_weat(x, y, pares$targets_a, pares$targets_b)
execute_weat <- function(x, y, targets_a, targets_b){
dif_sim_table = create_cosine_metrics(targets_a, targets_b)
print(dif_sim_table)
p_test = permutation_test(dif_sim_table, x, y)
p_valor = p_test$p.value
score_x_y = p_test$estatistica
tam_efeito = effect_size(x, y, dif_sim_table)
valores = data_frame(p_valor, tam_efeito)
return(valores = valores)
}
pares = create_pares(x, y, a, b, modelo=we)
execute_weat(x, y, pares$targets_a, pares$targets_b)
dif_table = bind_rows(weat_wmd_x, weat_wmd_y)
dif_table
permutation_test <- function(dif_sim_table, x, y){
xi = dif_sim_table %>% filter(target %in% x)
yi = dif_sim_table %>% filter(target %in% y)
permtest = permTS(xi$dif, yi$dif, alternative = "two.sided")
print(permtest)
return(list(p.value = permtest$p.value, estatistica = permtest$statistic))
}
permutation_test(dif_table, x, y)
pares = create_pares(x, y, a, b, modelo=we)
execute_weat(x, y, pares$targets_a, pares$targets_b)
weat_wmd_x = wmd_calculation_2(we, x, a, b)
weat_wmd_y = wmd_calculation_2(we, y, a, b)
dif_table = bind_rows(weat_wmd_x, weat_wmd_y)
permutation_test(dif_table, x, y)
pares = create_pares(x, y, a, b, modelo=we)
execute_weat(x, y, pares$targets_a, pares$targets_b)
effect_size(x, y, dif_table)
execute_weat(x, y, pares$targets_a, pares$targets_b)
get_dif_wmd_table <- function(we, x, y, a, b){
weat_wmd_x = wmd_calculation_2(we, x, a, b)
weat_wmd_y = wmd_calculation_2(we, y, a, b)
dif_table = bind_rows(weat_wmd_x, weat_wmd_y)
return(dif_table)
}
pares = create_pares(x, y, a, b, modelo=we)
pares
get_dif_wmd_table(we, x, y, a, b)
execute_weat_wmd_2 <- function(we, x, y, a, b){
dif_sim_table = get_dif_wmd_table(we, x, y, a, b)
p_test = permutation_test(dif_sim_table, x, y)
p_valor = p_test$p.value
score_x_y = p_test$estatistica
tam_efeito = effect_size(x, y, dif_sim_table)
valores = data_frame(p_valor, tam_efeito)
return(valores = valores)
}
execute_weat_wmd_2 <- function(we, x, y, a, b){
dif_sim_table = get_dif_wmd_table(we, x, y, a, b)
p_test = permutation_test(dif_sim_table, x, y)
p_valor = p_test$p.value
score_x_y = p_test$estatistica
tam_efeito = effect_size(x, y, dif_sim_table)
valores = data_frame(p_valor, tam_efeito)
return(valores = valores)
}
execute_weat_wmd_2(we, x, y, a, b)
we = read.binary.vectors("./../embeddings/FOLHASP-2014-12-30-2014-01-01.bin")
x = c("dilma", "pt", "rousseff", "petista")
y = c("aécio", "psdb", "neves", "tucano")
a = c("bom","ótimo","maravilhoso","excelente","alto","déficit")
b = c("ruim","fraco","péssimo","horrível","baixo","superávit")
execute_weat_wmd_2(we, x, y, a, b)
x = c("dilma", "pt", "rousseff", "petista", "pt")
y = c("aécio", "psdb", "neves", "tucano")
a = c("bom","ótimo","maravilhoso","excelente","alto","déficit")
b = c("ruim","fraco","péssimo","horrível","baixo","superávit")
execute_weat_wmd_2 <- function(we, x, y, a, b){
dif_sim_table = get_dif_wmd_table(we, x, y, a, b)
p_test = permutation_test(dif_sim_table, x, y)
p_valor = p_test$p.value
score_x_y = p_test$estatistica
tam_efeito = effect_size(x, y, dif_sim_table)
valores = data_frame(p_valor, tam_efeito)
return(valores = valores)
}
execute_weat_wmd_2(we, x, y, a, b)
pares = create_pares(x, y, a, b, we)
vies = execute_weat(x, y, pares$targets_a, pares$targets_b)
vies
permutation_test_wmd <- function(we, x, y, a, b){
perms = permutacao(x, y)
perms_1 = perms[[1]]
perms_2 = perms[[2]]
n = nrow(perms_1)/2 #poderia pegar qualquer data frame. divide por 2 porque depois da metade dos data frames, os valores comecam a se repetir
weats_perms = vector(length = n)
pb = txtProgressBar(min = 0, max = n, style = 3)
for(i in 1:n){
set_1 = perms_1[i,] %>% as_vector() %>% as.character()
set_2 = perms_2[i,] %>% as_vector() %>% as.character()
value = weat_wmd(we, set_1, set_2, a, b)
weats_perms[i] = value
setTxtProgressBar(pb, i)
}
close(pb)
# adicinar effect size
p.value = sum(weats_perms >= abs(weats_perms[1]))/length(weats_perms)
return(p.value)
}
pares = create_pares(x, y, a, b, we)
vies = execute_weat(x, y, pares$targets_a, pares$targets_b)
vies
weat_wmd(we, x, y, a, b)
weat_wmd
x = c("dilma", "pt", "rousseff", "petista")
y = c("aécio", "psdb", "neves", "tucano")
a = c("bom","ótimo","maravilhoso","excelente","alto","déficit")
b = c("ruim","fraco","péssimo","horrível","baixo","superávit")
weat_wmd(we, x, y, a, b)
pares = create_pares(x, y, a, b, we)
vies = execute_weat(x, y, pares$targets_a, pares$targets_b)
execute_weat(x, y, pares$targets_a, pares$targets_b)
we = read.binary.vectors("./../embeddings/FOLHASP-2014-12-30-2014-01-01.bin")
x = c("dilma", "pt", "rousseff", "petista")
y = c("aécio", "psdb", "neves", "tucano")
a = c("bom","ótimo","maravilhoso","excelente","alto","déficit")
b = c("ruim","fraco","péssimo","horrível","baixo","superávit")
weat_wmd(we, x, y, a, b)
pares = create_pares(x, y, a, b, we)
execute_weat(x, y, pares$targets_a, pares$targets_b)
wmd_calculation <- function(we, x, y, a, b){
to_dtm <- function(x, y, a, b){
format_vectors = function(vec, doc_label){
vec = vec %>% as_data_frame() %>% rename(term = value)
vec$count = 1
vec$document = doc_label
return(vec)
}
x = format_vectors(x, 1)
y = format_vectors(y, 2)
a = format_vectors(a, 3)
b = format_vectors(b, 4)
dtm = bind_rows(x, y, a, b) %>% cast_sparse(document, term, count)
return(dtm)
}
dtm = to_dtm(x, y, a, b)
targets=dtm[1:2,]
features=dtm[3:4,]
rwmd = RelaxedWordMoversDistance$new(we, normalize = FALSE, progressbar = F)
wmd = rwmd$dist2(targets, features)
return(wmd)
}
execute_weat(x, y, pares$targets_a, pares$targets_b)
execute_weat_wmd_2(we, x, y, a, b)
execute_weat_wmd(we, x, y, a, b)
wmd_calculation(we, x, y, a, b)
weat_wmd(we, x, y, a, b)
weat_wmd <- function(we, x, y, a, b){
wmd_matrix = wmd_calculation(we, x, y, a, b)
weat = get_weat_value(wmd_matrix)
return(weat)
}
permutation_test_wmd <- function(we, x, y, a, b){
perms = permutacao(x, y)
perms_1 = perms[[1]]
perms_2 = perms[[2]]
n = nrow(perms_1)/2 #poderia pegar qualquer data frame. divide por 2 porque depois da metade dos data frames, os valores comecam a se repetir
weats_perms = vector(length = n)
pb = txtProgressBar(min = 0, max = n, style = 3)
for(i in 1:n){
set_1 = perms_1[i,] %>% as_vector() %>% as.character()
set_2 = perms_2[i,] %>% as_vector() %>% as.character()
value = weat_wmd(we, set_1, set_2, a, b)
weats_perms[i] = value
setTxtProgressBar(pb, i)
}
close(pb)
# adicinar effect size
p.value = sum(weats_perms >= abs(weats_perms[1]))/length(weats_perms)
return(p.value,weat_perms)
}
q = weat_wmd(we, x, y, a, b)
q[[1]]
q[[2]]
permutation_test_wmd <- function(we, x, y, a, b){
perms = permutacao(x, y)
perms_1 = perms[[1]]
perms_2 = perms[[2]]
n = nrow(perms_1)/2 #poderia pegar qualquer data frame. divide por 2 porque depois da metade dos data frames, os valores comecam a se repetir
weats_perms = vector(length = n)
pb = txtProgressBar(min = 0, max = n, style = 3)
for(i in 1:n){
set_1 = perms_1[i,] %>% as_vector() %>% as.character()
set_2 = perms_2[i,] %>% as_vector() %>% as.character()
value = weat_wmd(we, set_1, set_2, a, b)
weats_perms[i] = value
setTxtProgressBar(pb, i)
}
close(pb)
# adicinar effect size
p.value = sum(weats_perms >= abs(weats_perms[1]))/length(weats_perms)
return(list(p.value,weat_perms))
}
q = weat_wmd(we, x, y, a, b)
q[[1]]
q[[2]]
weat_wmd <- function(we, x, y, a, b){
wmd_matrix = wmd_calculation(we, x, y, a, b)
print(wmd_matrix)
weat = get_weat_value(wmd_matrix)
return(weat)
}
weat_wmd(we, x, y, a, b)
permutation_test_wmd <- function(we, x, y, a, b){
weat_wmd <- function(we, x, y, a, b){
get_weat_value <- function(wmd_matrix){
sums = (wmd_matrix[,1] - wmd_matrix[,2])
weat = sums[1] - sums[2]
return(weat)
}
wmd_matrix = wmd_calculation(we, x, y, a, b)
weat = get_weat_value(wmd_matrix)
return(weat)
}
perms = permutacao(x, y)
perms_1 = perms[[1]]
perms_2 = perms[[2]]
n = nrow(perms_1)/2 #poderia pegar qualquer data frame. divide por 2 porque depois da metade dos data frames, os valores comecam a se repetir
weats_perms = vector(length = n)
pb = txtProgressBar(min = 0, max = n, style = 3)
for(i in 1:n){
set_1 = perms_1[i,] %>% as_vector() %>% as.character()
set_2 = perms_2[i,] %>% as_vector() %>% as.character()
value = weat_wmd(we, set_1, set_2, a, b)
weats_perms[i] = value
setTxtProgressBar(pb, i)
}
close(pb)
# adicinar effect size
p.value = sum(weats_perms >= abs(weats_perms[1]))/length(weats_perms)
return(list(p.value,weat_perms))
}
execute_weat_wmd <- function(we, x, y, a, b){
weat_wmd <- function(we, x, y, a, b){
get_weat_value <- function(wmd_matrix){
sums = (wmd_matrix[,1] - wmd_matrix[,2])
weat = sums[1] - sums[2]
return(weat)
}
wmd_matrix = wmd_calculation(we, x, y, a, b)
weat = get_weat_value(wmd_matrix)
return(weat)
}
perms = permutacao(x, y)
perms_1 = perms[[1]]
perms_2 = perms[[2]]
n = nrow(perms_1)/2 #poderia pegar qualquer data frame. divide por 2 porque depois da metade dos data frames, os valores comecam a se repetir
weats_perms = vector(length = n)
pb = txtProgressBar(min = 0, max = n, style = 3)
for(i in 1:n){
set_1 = perms_1[i,] %>% as_vector() %>% as.character()
set_2 = perms_2[i,] %>% as_vector() %>% as.character()
value = weat_wmd(we, set_1, set_2, a, b)
weats_perms[i] = value
setTxtProgressBar(pb, i)
}
close(pb)
# adicinar effect size
p.value = sum(weats_perms >= abs(weats_perms[1]))/length(weats_perms)
return(list(p.value,weat_perms))
}
execute_weat_wmd(we, x, y, a, b)
execute_weat_wmd <- function(we, x, y, a, b){
weat_wmd <- function(we, x, y, a, b){
get_weat_value <- function(wmd_matrix){
sums = (wmd_matrix[,1] - wmd_matrix[,2])
weat = sums[1] - sums[2]
return(weat)
}
wmd_matrix = wmd_calculation(we, x, y, a, b)
weat = get_weat_value(wmd_matrix)
return(weat)
}
perms = permutacao(x, y)
perms_1 = perms[[1]]
perms_2 = perms[[2]]
n = nrow(perms_1)/2 #poderia pegar qualquer data frame. divide por 2 porque depois da metade dos data frames, os valores comecam a se repetir
weats_perms = vector(length = n)
pb = txtProgressBar(min = 0, max = n, style = 3)
for(i in 1:n){
set_1 = perms_1[i,] %>% as_vector() %>% as.character()
set_2 = perms_2[i,] %>% as_vector() %>% as.character()
value = weat_wmd(we, set_1, set_2, a, b)
weats_perms[i] = value
setTxtProgressBar(pb, i)
}
close(pb)
# adicinar effect size
p.value = sum(weats_perms >= abs(weats_perms[1]))/length(weats_perms)
return(p.value)
}
execute_weat_wmd(we, x, y, a, b)
execute_weat(x, y, pares$targets_a, pares$targets_b)
execute_weat_wmd(we, x, y, a, b)
execute_weat(x, y, pares$targets_a, pares$targets_b)
library("wordVectors")
library("dplyr")
library("readr")
source("../WEAT/weat.R")
#gn = read.binary.vectors("GoogleNews-vectors-negative300.bin")
gn = read.binary.vectors("../utils/wikipedia_pt.bin")
x = c("formiga","besouro","grilo","vespa","mosca","barata","minhoca")
y = c("lírio","orquídea","girassol","margarida","rosa","tulipa","violeta")
b = c("abuso", "acidente", "sujeira", "assassinato", "doença", "acidente", "morte")
a = c("carinho", "liberdade", "saúde", "amor", "paz", "alegria", "amigo")
results = data_frame()
write_results = function(previous_results, new_result){
results = previous_results %>% bind_rows(new_result)
write_csv(results, "results.csv")
return(results)
}
execute = function(x, y, a, b, gn, results){
pares = create_pares(x, y, a, b, gn)
weat = execute_weat(x, y, pares$targets_a, pares$targets_b)
weat$source = "weat"
results = write_results(results, weat)
wmd = execute_weat_wmd(gn, x, y, a, b)
wmd$source = "wmd"
results = write_results(results, wmd)
return(results)
}
results = execute(x, y, a, b, gn, results)
library("wordVectors")
library("dplyr")
library("readr")
source("../WEAT/weat.R")
#gn = read.binary.vectors("GoogleNews-vectors-negative300.bin")
gn = read.binary.vectors("../utils/wikipedia_pt.bin")
x = c("formiga","besouro","grilo","vespa","mosca","barata","minhoca")
y = c("lírio","orquídea","girassol","margarida","rosa","tulipa","violeta")
b = c("abuso", "acidente", "sujeira", "assassinato", "doença", "acidente", "morte")
a = c("carinho", "liberdade", "saúde", "amor", "paz", "alegria", "amigo")
results = data_frame()
write_results = function(previous_results, new_result){
results = previous_results %>% bind_rows(new_result)
write_csv(results, "results.csv")
return(results)
}
execute = function(x, y, a, b, gn, results){
pares = create_pares(x, y, a, b, gn)
weat = execute_weat(x, y, pares$targets_a, pares$targets_b)
weat$source = "weat"
results = write_results(results, weat)
wmd = execute_weat_wmd(gn, x, y, a, b)
wmd$source = "wmd"
results = write_results(results, wmd)
return(results)
}
results = execute(x, y, a, b, gn, results)
results
